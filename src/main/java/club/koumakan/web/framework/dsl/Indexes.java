/*
 * This file is generated by jOOQ.
 */
package club.koumakan.web.framework.dsl;


import club.koumakan.web.framework.dsl.tables.DataDictionary;
import club.koumakan.web.framework.dsl.tables.Log;
import club.koumakan.web.framework.dsl.tables.Role;
import club.koumakan.web.framework.dsl.tables.User;
import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.impl.Internal;

import javax.annotation.processing.Generated;


/**
 * A class modelling indexes of tables of the <code>public</code> schema.
 */
@Generated(
  value = {
    "http://www.jooq.org",
    "jOOQ version:3.12.3"
  },
  comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Indexes {

  // -------------------------------------------------------------------------
  // INDEX definitions
  // -------------------------------------------------------------------------

  public static final Index DATA_DICTIONARY_CODE_KEY = Indexes0.DATA_DICTIONARY_CODE_KEY;
  public static final Index DATA_DICTIONARY_NAME_KEY = Indexes0.DATA_DICTIONARY_NAME_KEY;
  public static final Index DATA_DICTIONARY_PKEY = Indexes0.DATA_DICTIONARY_PKEY;
  public static final Index LOG_PKEY = Indexes0.LOG_PKEY;
  public static final Index ROLE_CODE_KEY = Indexes0.ROLE_CODE_KEY;
  public static final Index ROLE_NAME_KEY = Indexes0.ROLE_NAME_KEY;
  public static final Index ROLE_PKEY = Indexes0.ROLE_PKEY;
  public static final Index USER_EMAIL_KEY = Indexes0.USER_EMAIL_KEY;
  public static final Index USER_PKEY = Indexes0.USER_PKEY;
  public static final Index USER_USERNAME_KEY = Indexes0.USER_USERNAME_KEY;

  // -------------------------------------------------------------------------
  // [#1459] distribute members to avoid static initialisers > 64kb
  // -------------------------------------------------------------------------

  private static class Indexes0 {
    public static Index DATA_DICTIONARY_CODE_KEY = Internal.createIndex("data_dictionary_code_key", DataDictionary.DATA_DICTIONARY, new OrderField[]{DataDictionary.DATA_DICTIONARY.CODE}, true);
    public static Index DATA_DICTIONARY_NAME_KEY = Internal.createIndex("data_dictionary_name_key", DataDictionary.DATA_DICTIONARY, new OrderField[]{DataDictionary.DATA_DICTIONARY.NAME}, true);
    public static Index DATA_DICTIONARY_PKEY = Internal.createIndex("data_dictionary_pkey", DataDictionary.DATA_DICTIONARY, new OrderField[]{DataDictionary.DATA_DICTIONARY.ID}, true);
    public static Index LOG_PKEY = Internal.createIndex("log_pkey", Log.LOG, new OrderField[]{Log.LOG.ID}, true);
    public static Index ROLE_CODE_KEY = Internal.createIndex("role_code_key", Role.ROLE, new OrderField[]{Role.ROLE.CODE}, true);
    public static Index ROLE_NAME_KEY = Internal.createIndex("role_name_key", Role.ROLE, new OrderField[]{Role.ROLE.NAME}, true);
    public static Index ROLE_PKEY = Internal.createIndex("role_pkey", Role.ROLE, new OrderField[]{Role.ROLE.ID}, true);
    public static Index USER_EMAIL_KEY = Internal.createIndex("user_email_key", User.USER, new OrderField[]{User.USER.EMAIL}, true);
    public static Index USER_PKEY = Internal.createIndex("user_pkey", User.USER, new OrderField[]{User.USER.ID}, true);
    public static Index USER_USERNAME_KEY = Internal.createIndex("user_username_key", User.USER, new OrderField[]{User.USER.USERNAME}, true);
  }
}
